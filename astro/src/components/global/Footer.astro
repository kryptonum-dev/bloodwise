---
import sanityFetch from "@/utils/sanity.fetch";
import { Icon } from "astro-icon/components";
import Image, { ImageDataQuery, type ImageDataTypes } from "@/components/ui/image.astro";
import Markdown from "@/components/ui/markdown.astro";

const { socials, footer } = await sanityFetch<{
  socials: { facebook: string; instagram: string; linkedin: string };
  footer: {
    logo: ImageDataTypes[];
    annotation: string;
  };
}>({
  query: `
    *[_id == 'global'][0] {
      socials {
        facebook,
        instagram,
        linkedin,
      },
      footer {
        logo[] {
          ${ImageDataQuery}
        },
        annotation,
      },
    }
  `,
});
---

<footer id='footer' dark-background>
  <div class='max-width'>
    <div class='content'>
      <a href='/' aria-label='Strona główna' class='logo'>
        <Icon name='bloodwise-logo_dark' />
      </a>
      <ul class='socials'>
        {
          Object.entries(socials).map(
            ([platform, url]) =>
              url && (
                <li>
                  <a href={url} target='_blank' rel='noreferrer'>
                    {platform === "facebook" && <Icon name='facebook' size={21} title='Facebook' />}
                    {platform === "instagram" && <Icon name='instagram' size={21} title='Instagram' />}
                    {platform === "linkedin" && <Icon name='linkedin' size={21} title='LinkedIn' />}
                  </a>
                </li>
              )
          )
        }
      </ul>
      <div class='links'>
        <a href='/polityka-prywatnosci' class='link'>Polityka prywatności</a>
        <button class='link reset-cookies'>Ustawienia plików cookies</button>
        <p class='copyright'>
          <span>© {new Date().getFullYear()}</span>
          <a href='https://kryptonum.eu/pl' aria-label='Kryptonum'>
            <Icon name='kryptonum-logo' />
          </a>
        </p>
      </div>
    </div>
    <div class='funding'>
      <div class='logos'>
        {
          footer.logo.map(img => (
            <Image
              data={img}
              sizes='160px'
              style={`
                  background: url(${img.asset.metadata.lqip}) center / cover no-repeat;
                  height: ${img.asset.metadata.dimensions.height}px;
                `}
            />
          ))
        }
      </div>
      <Markdown>{footer.annotation}</Markdown>
    </div>
  </div>
</footer>

<style lang='scss'>
  footer {
    padding: clamp(20px, calc(42vw / 7.68), 42px) 0 clamp(36px, calc(80vw / 7.68), 80px);
    border-radius: 8px 8px 0 0;
    background: linear-gradient(230deg, #006860, #01403b 62%);
    color: var(--background-100, #fffcf9);
  }
  .logo {
    display: inline-block;
    svg {
      width: clamp(143px, calc(183vw / 7.68), 183px);
      height: auto;
    }
  }
  .content {
    display: flex;
    flex-wrap: wrap;
    gap: clamp(24px, calc(32vw / 7.68), 32px);
    justify-content: space-between;
    align-items: center;
    .socials {
      margin-right: auto;
    }
    .links {
      display: flex;
      flex-wrap: wrap;
      gap: 24px;
      .copyright {
        svg {
          display: inline-block;
          vertical-align: middle;
        }
      }
    }
  }
  .socials {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 8px;
    a {
      display: block;
      width: 44px;
      height: 44px;
      display: grid;
      place-items: center;
      transition: opacity 0.5s var(--easing);
      &:hover {
        opacity: 0.62;
      }
    }
  }
  .funding {
    margin-top: clamp(20px, calc(28vw / 7.68), 28px);
    padding-top: clamp(32px, calc(42vw / 7.68), 42px);
    border-top: 1px solid var(--primary-600, #0f9288);
    display: grid;
    align-items: flex-start;
    gap: clamp(16px, calc(16vw / 7.68), 24px);
    @media (min-width: 1000px) {
      grid-template-columns: 1fr 1.2fr;
    }
    font-size: calc(12rem / 16);
    line-height: 150%;
    .logos {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      gap: clamp(12px, calc(24vw / 7.68), 24px);
      img {
        width: auto;
        max-height: clamp(32px, calc(50vw / 7.68), 50px);
        object-fit: contain;
      }
    }
  }
</style>

<script>
  import { setCookie } from "@/utils/set-cookie";

  const footer = document.querySelector("#footer");
  footer.querySelector(".reset-cookies").addEventListener("click", () => {
    document.cookie.split(";").forEach(cookie => {
      const eqPos = cookie.indexOf("=");
      const name = eqPos > -1 ? cookie.substring(0, eqPos) : cookie;
      setCookie(name, "", -1);
    });
    window.location.reload();
  });
</script>
